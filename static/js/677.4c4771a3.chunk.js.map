{"version":3,"file":"static/js/677.4c4771a3.chunk.js","mappings":"2LAEaA,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAClC,OACE,eAAIC,UAAU,YAAd,SACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMH,UAAU,WAAWI,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA/D,SACGI,KAFID,EADC,KASjB,C,gKCdYK,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAOrB,OACE,kBAAMR,UAAU,aAAaQ,SAPV,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,cAAcC,SAASC,MAAMC,MAClDP,EAASG,EACV,EAGC,WACE,kBAAOX,UAAU,QAAQgB,KAAK,OAAOC,KAAK,WAC1C,mBAAQjB,UAAU,eAAegB,KAAK,SAAtC,sBAKL,EC6BD,EAtCe,WAAO,IAAD,EACnB,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMxB,GAAWyB,EAAAA,EAAAA,MACXC,EAAU,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,GA0BhD,OAjBAC,EAAAA,EAAAA,YAAU,WACW,KAAfF,GACFL,EAAS,IAGX,IAAMQ,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAaJ,GAFtB,OAERK,EAFQ,OAGdV,EAASU,EAASC,SAHJ,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDASfL,GACD,GAAE,CAACH,KAGF,4BACE,SAAClB,EAAD,CAAMC,SA1BW,SAAAG,GACnB,GAAmB,KAAfA,EACF,OAAOY,EAAgB,CAAC,GAE1BA,EAAgB,CAAET,MAAOH,GAC1B,IAsBIQ,EAAMe,OAAS,IAAK,SAACrC,EAAA,EAAD,CAAWC,OAAQqB,EAAOpB,SAAUA,MAG9D,C,8LCxCKoC,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAa,mCAAG,oGACJD,EAAAA,EAAAA,IAAA,qCAAwCD,IADpC,cACrBL,EADqB,yBAGpBA,EAASQ,MAHW,2CAAH,qDAMbC,EAAS,mCAAG,WAAMrC,GAAN,uFACAkC,EAAAA,EAAAA,IAAA,gBAAmBlC,EAAnB,oBAAiCiC,IADjC,cACjBL,EADiB,yBAGhBA,EAASQ,MAHO,2CAAH,sDAMTE,EAAS,mCAAG,WAAMtC,GAAN,uFACAkC,EAAAA,EAAAA,IAAA,gBAAmBlC,EAAnB,4BAAyCiC,IADzC,cACjBL,EADiB,yBAGhBA,EAASQ,MAHO,2CAAH,sDAMTG,EAAY,mCAAG,WAAMvC,GAAN,uFACHkC,EAAAA,EAAAA,IAAA,gBAAmBlC,EAAnB,4BAAyCiC,IADtC,cACpBL,EADoB,yBAGnBA,EAASQ,MAHU,2CAAH,sDAMZT,EAAY,mCAAG,WAAOf,GAAP,uFACHsB,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAA+CrB,IAD5C,cACpBgB,EADoB,yBAGnBA,EAASQ,MAHU,2CAAH,qD","sources":["components/MovieList.jsx","components/Form.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const MovieList = ({ movies, location }) => {\n  return (\n    <ul className=\"filmsList\">\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link className=\"filmLink\" to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export const Form = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const inputValue = e.currentTarget.elements.query.value;\n    onSubmit(inputValue)\n  };\n\n  return (\n    <form className=\"searchForm\" onSubmit={handleSubmit}>\n      <input className=\"input\" type=\"text\" name=\"query\" />\n      <button className=\"searchButton\" type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchByQuery } from 'services/api';\nimport { MovieList } from 'components/MovieList';\nimport { Form } from 'components/Form';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const queryValue = searchParams.get('query') ?? '';\n\n  const changeParams = inputValue => {\n    if (inputValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: inputValue });\n  };\n\n  useEffect(() => {\n    if (queryValue === '') {\n      setFilms([]);\n    }\n\n    const fetchData = async () => {\n      try {\n        const response = await fetchByQuery(queryValue);\n        setFilms(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, [queryValue]);\n\n  return (\n    <div>\n      <Form onSubmit={changeParams} />\n      {films.length > 0 && <MovieList movies={films} location={location} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '09964a9d83eee864836866e0c73a90b0';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchFilm = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchByQuery = async (query) => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${query}`);\n\n  return response.data;\n};"],"names":["MovieList","movies","location","className","map","id","title","to","state","from","Form","onSubmit","e","preventDefault","inputValue","currentTarget","elements","query","value","type","name","useState","films","setFilms","useSearchParams","searchParams","setSearchParams","useLocation","queryValue","get","useEffect","fetchData","fetchByQuery","response","results","console","log","length","KEY","axios","fetchTrending","data","fetchFilm","fetchCast","fetchReviews"],"sourceRoot":""}