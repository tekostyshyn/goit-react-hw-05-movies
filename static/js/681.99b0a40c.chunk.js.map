{"version":3,"file":"static/js/681.99b0a40c.chunk.js","mappings":"yNA4CA,UAxCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBF,GAAW,GADK,mBAGSG,EAAAA,EAAAA,IAAaT,GAHtB,OAGRU,EAHQ,OAIdN,EAAWM,EAASC,SAJN,gDAMdC,QAAQC,IAAR,MANc,yBAQdP,GAAW,GARG,4EAAH,qDAYfE,GACD,GAAE,CAACR,KAGF,gCACGG,EAAQW,OAAS,IAChB,8BACGX,EAAQY,KAAI,SAAAC,GAAM,OACjB,4BACE,eAAGC,UAAU,WAAb,qBAAiCD,EAAOE,WACxC,cAAGD,UAAU,OAAb,SAAqBD,EAAOG,YAFpBH,EAAOI,GADA,MAQtBjB,EAAQW,QAAU,IAAmB,IAAdT,IACtB,gDAIP,C,8LCxCKgB,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAa,mCAAG,oGACJD,EAAAA,EAAAA,IAAA,qCAAwCD,IADpC,cACrBX,EADqB,yBAGpBA,EAASc,MAHW,2CAAH,qDAMbC,EAAS,mCAAG,WAAML,GAAN,uFACAE,EAAAA,EAAAA,IAAA,gBAAmBF,EAAnB,oBAAiCC,IADjC,cACjBX,EADiB,yBAGhBA,EAASc,MAHO,2CAAH,sDAMTE,EAAS,mCAAG,WAAMN,GAAN,uFACAE,EAAAA,EAAAA,IAAA,gBAAmBF,EAAnB,4BAAyCC,IADzC,cACjBX,EADiB,yBAGhBA,EAASc,MAHO,2CAAH,sDAMTf,EAAY,mCAAG,WAAMW,GAAN,uFACHE,EAAAA,EAAAA,IAAA,gBAAmBF,EAAnB,4BAAyCC,IADtC,cACpBX,EADoB,yBAGnBA,EAASc,MAHU,2CAAH,sDAMZG,EAAY,mCAAG,WAAOC,GAAP,uFACHN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAA+CO,IAD5C,cACpBlB,EADoB,yBAGnBA,EAASc,MAHU,2CAAH,qD","sources":["components/Reviews.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetchReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 && (\n        <>\n          {reviews.map(review => (\n            <div key={review.id}>\n              <p className=\"subtitle\">Author: {review.author}</p>\n              <p className=\"text\">{review.content}</p>\n            </div>\n          ))}\n        </>\n      )}\n      {reviews.length <= 0 && isLoading === false && (\n        <div>No reviews found</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = '09964a9d83eee864836866e0c73a90b0';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchFilm = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const fetchByQuery = async (query) => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${query}`);\n\n  return response.data;\n};"],"names":["movieId","useParams","useState","reviews","setReviews","isLoading","setLoading","useEffect","fetchData","fetchReviews","response","results","console","log","length","map","review","className","author","content","id","KEY","axios","fetchTrending","data","fetchFilm","fetchCast","fetchByQuery","query"],"sourceRoot":""}